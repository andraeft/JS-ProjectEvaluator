{"remainingRequest":"C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\node_modules\\babel-loader\\lib\\index.js!C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\src\\services\\dataService.js","dependencies":[{"path":"C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\src\\services\\dataService.js","mtime":1611162333086},{"path":"C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/MyThings/Andrei/project/JS-ProjectEvaluator/project_fe/src/services/dataService.js"],"names":["isLoggedIn","sessionStorage","getItem","user","JSON","parse","getProjectRole","userId","projectId","fetch","response","json","getAllProjects","gettAllProjectsByUserId","id","gettAllEvaluationProjectsByUserId","createProject","project","method","headers","body","stringify","getProjectById","addUser","data","checkUser","generateJury","getJury","submitGrade","getGrade","stopEvaluation"],"mappings":"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","sourcesContent":["\r\nexport function isLoggedIn(){\r\n    if (sessionStorage.getItem(\"user\")) {\r\n        const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n        return user;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function getProjectRole(userId, projectId) {\r\n    const response = await fetch('/api/project-role/' + userId + '/' + projectId);\r\n    return await response.json();\r\n}\r\n\r\nexport async function getAllProjects() {\r\n\r\n    const response = await fetch('/api/projects');\r\n    return await response.json();\r\n}\r\n\r\nexport async function gettAllProjectsByUserId(id) {\r\n    const response = await fetch('/api/projects-user/' + id);\r\n    return await response.json();\r\n}\r\n\r\nexport async function gettAllEvaluationProjectsByUserId(id) {\r\n    const response = await fetch('/api/projects-jury/' + id); \r\n    return await response.json();\r\n}\r\n\r\nexport async function createProject(project) {\r\n\r\n    if (sessionStorage.getItem(\"user\")){\r\n        const user = JSON.parse(sessionStorage.getItem(\"user\"));\r\n        project.userId = user.id; \r\n    }\r\n\r\n    const response = await fetch(`/api/projects`, {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(project)\r\n      })\r\n    return await response.json();\r\n}\r\n\r\nexport async function getProjectById(id) {\r\n\r\n    const response = await fetch('/api/projects/' + id);\r\n    return await response.json();\r\n}\r\n\r\nexport async function addUser(data) {\r\n\r\n    const response = await fetch(`/api/users`, {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(data)\r\n      })\r\n    return await response.json();\r\n}\r\n\r\nexport async function checkUser(data) {\r\n\r\n    const response = await fetch('/api/users/', {\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(data)\r\n    });\r\n    return await response.json();\r\n}\r\n\r\nexport async function generateJury(userId, projectId) {\r\n    const response = await fetch(`/api/generate-jury/` + userId + '/' + projectId, {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n      })\r\n    return await response.json();\r\n}\r\n\r\nexport async function getJury(projectId) {\r\n    const response = await fetch('/api/jury/' + projectId);\r\n    return await response.json();\r\n}\r\n\r\nexport async function submitGrade(data) {\r\n    const response = await fetch(`/api/grades`, {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(data)\r\n      })\r\n    return await response.json();\r\n}\r\n\r\nexport async function getGrade(userId, projectId) {\r\n    const response = await fetch('/api/grade/' + userId + '/' + projectId);\r\n    return await response.json();\r\n}\r\n\r\nexport async function stopEvaluation(projectId) {\r\n    const response = await fetch(`/api/stop/` + projectId, {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'}\r\n      })\r\n    return await response.json();\r\n}"]}]}