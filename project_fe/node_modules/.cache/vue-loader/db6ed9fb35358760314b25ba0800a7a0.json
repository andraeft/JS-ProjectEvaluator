{"remainingRequest":"C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\src\\views\\ProjectPage.vue?vue&type=style&index=0&id=2a8d20fe&scoped=true&lang=scss&","dependencies":[{"path":"C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\src\\views\\ProjectPage.vue","mtime":1611170909586},{"path":"C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\MyThings\\Andrei\\project\\JS-ProjectEvaluator\\project_fe\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpmb3Jtew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgICB3aWR0aDogMzAlOw0KICAgIG1hcmdpbjogYXV0bzsNCiAgICBtYXJnaW4tdG9wOiAxMHB4Ow0KDQogICAgKiB7DQogICAgICAgIG1hcmdpbjogNXB4Ow0KICAgIH0NCn0NCg=="},{"version":3,"sources":["ProjectPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ProjectPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n<div>\r\n    <div>\r\n        <h1> {{ project.title }} </h1>\r\n        <i v-if=\"project.userId == currentUser.id\"> you created this project </i>\r\n        <p> {{project.deliverables}} </p>\r\n        <p> video url: <a :href=\"project.videoUrl\"> {{project.videoUrl}} </a> </p>\r\n        <p> project link: <a :href=\"project.projectLink\"> {{project.projectLink}} </a> </p>\r\n        <p> expires on: {{project.dueDate}} </p>\r\n    </div>\r\n    <div v-if=\"project.userId == currentUser.id\">\r\n        <div v-if=\"hasJury==false\">\r\n         <button @click=\"generateJury()\"> Generate jury </button>\r\n        </div>\r\n        <div v-if=\"hasJury==true\">\r\n            <h3> Members of the jury have been assigned. </h3>\r\n            <button @click=\"stopEvaluation()\" v-if=\"project.finalGrade < 0\"> Stop evaluation </button>\r\n            <h3 v-if=\"project.finalGrade > 0\"> Evaluation has ended. <br> Project has been evaluated with: {{ project.finalGrade }} </h3>\r\n            <ul v-if=\"currentUser.type == 'PROF'\">\r\n                <li v-for=\"member in jury\" :key=\"member.id\">\r\n                    {{ member.username }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div v-if=\"userRole=='EVAL'\">\r\n        <br>\r\n        <br>\r\n        <i> You are a jury to this project. </i>\r\n        <p><i  v-if=\"project.finalGrade !== -1\"> Evaluation has ended. </i></p>\r\n        <form v-if=\"project.finalGrade == -1\">\r\n            <label for=\"grade\"> Your grade to this project </label>\r\n            <input type=\"number\" v-model=\"projectGrade\" name=\"grade\" />\r\n            <input type=\"button\" @click=\"submitGrade()\" value=\"submit\"/>\r\n        </form>\r\n    </div>\r\n</div>\r\n</template>\r\n<script>\r\nimport { getProjectById, generateJury, getJury, isLoggedIn, getProjectRole, submitGrade, getGrade, stopEvaluation } from '../services/dataService'\r\nexport default {\r\n    name: \"ProjectPage\",\r\n    data(){\r\n        return {\r\n            id: this.$route.params.id,\r\n            project: {},\r\n            hasJury: false,\r\n            currentUser: {},\r\n            userRole: '',\r\n            projectGrade: ''\r\n        }\r\n    },\r\n    methods: {\r\n        getProjectById(id) {\r\n            console.log(id);\r\n            getProjectById(id).then(response => {\r\n                console.log(response);\r\n                this.project = response;\r\n                this.checkForJury();\r\n                this.currentUser = isLoggedIn();\r\n                if (this.currentUser) {\r\n                    console.log('user ' + JSON.stringify(this.currentUser))\r\n                    this.getProjectRole(this.currentUser.id, response.id);\r\n                }\r\n            })\r\n        },\r\n\r\n        generateJury(){\r\n            generateJury(this.project.userId, this.project.id).then(response => {\r\n                console.log(response)\r\n            })\r\n        },\r\n\r\n        checkForJury(){\r\n            getJury(this.project.id).then( response =>{\r\n                if (response && response.length > 0) {\r\n                    this.jury = response;\r\n                    this.hasJury = true;\r\n                }\r\n            });\r\n        },\r\n\r\n        getProjectRole(userId, projectId){\r\n            getProjectRole(userId, projectId).then( response => {\r\n                if (response) {\r\n                    console.log(response);\r\n                    this.userRole = response.role;\r\n                    if (this.userRole == \"EVAL\"){\r\n                        getGrade(this.currentUser.id, this.project.id).then(grade => {\r\n                            if (grade){\r\n                                this.projectGrade = grade.grade;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            })\r\n        },\r\n\r\n        submitGrade(){\r\n            const payload = {\r\n                grade: this.projectGrade,\r\n                userId: this.currentUser.id,\r\n                projectId: this.project.id\r\n            }\r\n            submitGrade(payload);\r\n        },\r\n\r\n        stopEvaluation(){\r\n            stopEvaluation(this.project.id);\r\n        }\r\n\r\n\r\n    },\r\n    beforeMount(){\r\n        console.log(\"beforeMount: \" + this.$route.params.id);\r\n        this.getProjectById(this.$route.params.id);\r\n    }\r\n\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\nform{\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 30%;\r\n    margin: auto;\r\n    margin-top: 10px;\r\n\r\n    * {\r\n        margin: 5px;\r\n    }\r\n}\r\n</style>"]}]}